/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, ContentChildren, Input, QueryList } from '@angular/core';
import { Router, ActivatedRoute, NavigationEnd } from '@angular/router';
import { MatSidenav } from '@angular/material';
import { SideNavItemComponent } from './item';
export class MatSidenavMenuComponent {
    /**
     * @param {?} router
     * @param {?} aroute
     */
    constructor(router, aroute) {
        this.router = router;
        this.aroute = aroute;
        // console.log('router:', this.router);
        this.router.events.subscribe(e => {
            // console.log('url:', this.router.url);
            // console.log('router state:', this.router.routerState);
            // if (this.router.routerState.root.children.length > 0 ) {
            if (e instanceof NavigationEnd) {
                // console.log('component:', '(' + Date.now + ')' + this.router.routerState.root.children[0].component);
                // console.log('path: ' + this.getPath());
                this.items.forEach(i => {
                    i.activatePath(this.getPath());
                });
                this.sidenav.close();
            }
            // console.log('path:', this.erouterState);
        });
        // this.aroute.url.subscribe( (u) => {
        //   console.log('active route:', u);
        // });
    }
    /**
     * @return {?}
     */
    getPath() {
        /** @type {?} */
        const path = this.router.routerState.snapshot.url;
        return path;
    }
}
MatSidenavMenuComponent.decorators = [
    { type: Component, args: [{
                selector: 'side-nav-menu',
                template: `
      <nav style="height:100%">
        <mat-toolbar color="primary">
          <button mat-icon-button (click)="sidenav.close()"><mat-icon>keyboard_arrow_left</mat-icon></button>&nbsp;
          <span>{{ title }}</span>
        </mat-toolbar>

        <ul class="side-nav-menu">
          <ng-content></ng-content>
        </ul>
      </nav>`,
                styles: [`.side-nav-menu {
          list-style-type: none;
          padding: 0
      }`]
            }] }
];
/** @nocollapse */
MatSidenavMenuComponent.ctorParameters = () => [
    { type: Router },
    { type: ActivatedRoute }
];
MatSidenavMenuComponent.propDecorators = {
    sidenav: [{ type: Input }],
    title: [{ type: Input }],
    items: [{ type: ContentChildren, args: [SideNavItemComponent, { descendants: true },] }]
};
if (false) {
    /** @type {?} */
    MatSidenavMenuComponent.prototype.sidenav;
    /** @type {?} */
    MatSidenavMenuComponent.prototype.title;
    /** @type {?} */
    MatSidenavMenuComponent.prototype.items;
    /** @type {?} */
    MatSidenavMenuComponent.prototype.active;
    /** @type {?} */
    MatSidenavMenuComponent.prototype.router;
    /** @type {?} */
    MatSidenavMenuComponent.prototype.aroute;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LXNpZGVuYXYtbWVudS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tYXQtc2lkZW5hdi1tZW51LyIsInNvdXJjZXMiOlsibGliL21hdC1zaWRlbmF2LW1lbnUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQW9CLFNBQVMsRUFBRSxlQUFlLEVBQWdCLEtBQUssRUFBVSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckgsT0FBTyxFQUFFLE1BQU0sRUFBRSxjQUFjLEVBQUUsYUFBYSxFQUF1QixNQUFNLGlCQUFpQixDQUFDO0FBQzdGLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFxQjVDLE1BQU0sT0FBTyx1QkFBdUI7Ozs7O0lBT2xDLFlBQW9CLE1BQWMsRUFBVSxNQUFzQjtRQUE5QyxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQVUsV0FBTSxHQUFOLE1BQU0sQ0FBZ0I7UUFDaEUsdUNBQXVDO1FBQ3ZDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBRSxDQUFDLENBQUMsRUFBRTtZQUNoQyx3Q0FBd0M7WUFDeEMseURBQXlEO1lBQ3pELDJEQUEyRDtZQUMzRCxJQUFJLENBQUMsWUFBWSxhQUFhLEVBQUU7Z0JBQzlCLHdHQUF3RztnQkFDeEcsMENBQTBDO2dCQUMxQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBRSxDQUFDLENBQUMsRUFBRTtvQkFDdEIsQ0FBQyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztnQkFDakMsQ0FBQyxDQUFDLENBQUM7Z0JBQ0gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQzthQUN0QjtZQUNELDJDQUEyQztRQUM3QyxDQUFDLENBQUMsQ0FBQztRQUNILHNDQUFzQztRQUN0QyxxQ0FBcUM7UUFDckMsTUFBTTtJQUNSLENBQUM7Ozs7SUFFTyxPQUFPOztjQUNQLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsR0FBRztRQUNqRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7OztZQWxESixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLFFBQVEsRUFBRTs7Ozs7Ozs7OzthQVVEO3lCQUVQOzs7UUFHRTthQUNMOzs7O1lBdkJNLE1BQU07WUFBRSxjQUFjOzs7c0JBMEIxQixLQUFLO29CQUNMLEtBQUs7b0JBQ0wsZUFBZSxTQUFDLG9CQUFvQixFQUFFLEVBQUMsV0FBVyxFQUFFLElBQUksRUFBQzs7OztJQUYxRCwwQ0FBNkI7O0lBQzdCLHdDQUFtQjs7SUFDbkIsd0NBQW1HOztJQUNuRyx5Q0FBNkI7O0lBRWpCLHlDQUFzQjs7SUFBRSx5Q0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlckNvbnRlbnRJbml0LCBDb21wb25lbnQsIENvbnRlbnRDaGlsZHJlbiwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBRdWVyeUxpc3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlciwgQWN0aXZhdGVkUm91dGUsIE5hdmlnYXRpb25FbmQsIFJvdXRlclN0YXRlU25hcHNob3QgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgTWF0U2lkZW5hdiB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcblxuaW1wb3J0IHsgU2lkZU5hdkl0ZW1Db21wb25lbnQgfSBmcm9tICcuL2l0ZW0nO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3NpZGUtbmF2LW1lbnUnLFxuICAgIHRlbXBsYXRlOiBgXG4gICAgICA8bmF2IHN0eWxlPVwiaGVpZ2h0OjEwMCVcIj5cbiAgICAgICAgPG1hdC10b29sYmFyIGNvbG9yPVwicHJpbWFyeVwiPlxuICAgICAgICAgIDxidXR0b24gbWF0LWljb24tYnV0dG9uIChjbGljayk9XCJzaWRlbmF2LmNsb3NlKClcIj48bWF0LWljb24+a2V5Ym9hcmRfYXJyb3dfbGVmdDwvbWF0LWljb24+PC9idXR0b24+Jm5ic3A7XG4gICAgICAgICAgPHNwYW4+e3sgdGl0bGUgfX08L3NwYW4+XG4gICAgICAgIDwvbWF0LXRvb2xiYXI+XG5cbiAgICAgICAgPHVsIGNsYXNzPVwic2lkZS1uYXYtbWVudVwiPlxuICAgICAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvbmF2PmAsXG4gICAgc3R5bGVzOiBbXG4gICAgICBgLnNpZGUtbmF2LW1lbnUge1xuICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgICBwYWRkaW5nOiAwXG4gICAgICB9YF1cbiAgfSlcbiAgZXhwb3J0IGNsYXNzIE1hdFNpZGVuYXZNZW51Q29tcG9uZW50IHtcblxuICAgIEBJbnB1dCgpIHNpZGVuYXY6IE1hdFNpZGVuYXY7XG4gICAgQElucHV0KCkgdGl0bGU6ICcnO1xuICAgIEBDb250ZW50Q2hpbGRyZW4oU2lkZU5hdkl0ZW1Db21wb25lbnQsIHtkZXNjZW5kYW50czogdHJ1ZX0pIGl0ZW1zOiBRdWVyeUxpc3Q8U2lkZU5hdkl0ZW1Db21wb25lbnQ+O1xuICAgIGFjdGl2ZTogU2lkZU5hdkl0ZW1Db21wb25lbnQ7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJvdXRlcjogUm91dGVyLCBwcml2YXRlIGFyb3V0ZTogQWN0aXZhdGVkUm91dGUpIHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCdyb3V0ZXI6JywgdGhpcy5yb3V0ZXIpO1xuICAgICAgdGhpcy5yb3V0ZXIuZXZlbnRzLnN1YnNjcmliZSggZSA9PiB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCd1cmw6JywgdGhpcy5yb3V0ZXIudXJsKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3JvdXRlciBzdGF0ZTonLCB0aGlzLnJvdXRlci5yb3V0ZXJTdGF0ZSk7XG4gICAgICAgIC8vIGlmICh0aGlzLnJvdXRlci5yb3V0ZXJTdGF0ZS5yb290LmNoaWxkcmVuLmxlbmd0aCA+IDAgKSB7XG4gICAgICAgIGlmIChlIGluc3RhbmNlb2YgTmF2aWdhdGlvbkVuZCkge1xuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdjb21wb25lbnQ6JywgJygnICsgRGF0ZS5ub3cgKyAnKScgKyB0aGlzLnJvdXRlci5yb3V0ZXJTdGF0ZS5yb290LmNoaWxkcmVuWzBdLmNvbXBvbmVudCk7XG4gICAgICAgICAgLy8gY29uc29sZS5sb2coJ3BhdGg6ICcgKyB0aGlzLmdldFBhdGgoKSk7XG4gICAgICAgICAgdGhpcy5pdGVtcy5mb3JFYWNoKCBpID0+IHtcbiAgICAgICAgICAgIGkuYWN0aXZhdGVQYXRoKHRoaXMuZ2V0UGF0aCgpKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICB0aGlzLnNpZGVuYXYuY2xvc2UoKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBjb25zb2xlLmxvZygncGF0aDonLCB0aGlzLmVyb3V0ZXJTdGF0ZSk7XG4gICAgICB9KTtcbiAgICAgIC8vIHRoaXMuYXJvdXRlLnVybC5zdWJzY3JpYmUoICh1KSA9PiB7XG4gICAgICAvLyAgIGNvbnNvbGUubG9nKCdhY3RpdmUgcm91dGU6JywgdSk7XG4gICAgICAvLyB9KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldFBhdGgoKSB7XG4gICAgICBjb25zdCBwYXRoID0gdGhpcy5yb3V0ZXIucm91dGVyU3RhdGUuc25hcHNob3QudXJsO1xuICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfVxuXG4gIH1cbiJdfQ==